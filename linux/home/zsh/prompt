# vim:ft=zsh:

autoload -U colors; colors;

BRACKET="[]"
PAREN="()"

# memo:
# %n user
# %m host
# %~ current directory
# %* HH:MM:SS
# %D YY-mm-dd

function host_prompt () {
    echo "%(?.%{$fg[green]%}.%{$fg[red]%})$BRACKET[1]%n@%m$BRACKET[2]%{${reset_color}%}"
}

function time_prompt () {
    echo "%{$fg[cyan]%}%* %#%{${reset_color}%} "
}

function update_prompt () {
    PROMPT="$( host_prompt ) $( time_prompt )"
    RPROMPT="$( git_prompt )$( current_path_prompt )"
}

GIT_PROMPT_ADDED="(added)"
GIT_PROMPT_MODIFIED="(modified)"
GIT_PROMPT_DELETED="(deleted)"
GIT_PROMPT_RENAMED="(renamed)"
GIT_PROMPT_UNMERGED="(unmerged)"
GIT_PROMPT_UNTRACKED="(untracked)"

function current_path_prompt {
    echo "%{$fg[cyan]%}$PROMPT_PAREN[1]%~$PROMPT_PAREN[2]%{${reset_color}%}"
}
function git_prompt {
    GIT_CURRENT_BRANCH=$( git branch &> /dev/null | grep '^\*' | cut -b 3- )
    if [ ${GIT_CURRENT_BRANCH} ]
    then
        GIT_BRANCH="$( git_prompt_color )$PROMPT_PAREN[1]branch:${GIT_CURRENT_BRANCH}$PROMPT_PAREN[2]%{${reset_color}%}"
        echo "${GIT_BRANCH}$( git_status )"
    fi
}

function git_status {
    GIT_INDEX=$(git status --porcelain 2> /dev/null)
    GIT_STATUS=''
    if $(echo "$GIT_INDEX" | grep '^?? ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_UNTRACKED"
    fi
    if $(echo "$GIT_INDEX" | grep '^A  ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_ADDED"
    elif $(echo "$GIT_INDEX" | grep '^M  ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_ADDED"
    fi
    if $(echo "$GIT_INDEX" | grep '^ M ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_MODIFIED"
    elif $(echo "$GIT_INDEX" | grep '^AM ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_MODIFIED"
    elif $(echo "$GIT_INDEX" | grep '^ T ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_MODIFIED"
    fi
    if $(echo "$GIT_INDEX" | grep '^R  ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_RENAMED"
    fi
    if $(echo "$GIT_INDEX" | grep '^ D ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_DELETED"
    elif $(echo "$GIT_INDEX" | grep '^AD ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_DELETED"
    fi
    if $(echo "$GIT_INDEX" | grep '^UU ' &> /dev/null); then
      GIT_STATUS+="$GIT_PROMPT_UNMERGED"
    fi
    echo "%{$fg[yellow]%}${GIT_STATUS}%{${reset_color}%}"
}

GIT_PROMPT_COLOR_DIRTY="%{$fg[red]%}"
GIT_PROMPT_COLOR_CLEAN="%{$fg[green]%}"
function git_prompt_color {
    if [[ -n $(git status -s --ignore-submodules=dirty 2> /dev/null) ]]; then
      echo "${GIT_PROMPT_COLOR_DIRTY}"
    else
      echo "${GIT_PROMPT_COLOR_CLEAN}"
    fi
}

autoload -Uz add-zsh-hook
# プロンプト表示直前にプロンプト内容を書き換える
add-zsh-hook precmd update_prompt
add-zsh-hook preexec update_prompt

