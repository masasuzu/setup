# vim:ft=zsh:
# =======================================================================
# prompt
# -----------------------------------------------------------------------

setopt prompt_subst
setopt prompt_cr
setopt transient_rprompt
setopt prompt_percent

autoload -U colors; colors;

BRACKET="[]"
PAREN="()"

# memo:
# %n user
# %m host
# %~ current directory
# %* HH:MM:SS
# %D YY-mm-dd

function host_prompt {
    echo "%(?.%{$fg[green]%}.%{$fg[red]%})$BRACKET[1]%n@%m$BRACKET[2]%{${reset_color}%}"
}

function time_prompt {
    echo "%{$fg[cyan]%}%* %#%{${reset_color}%} "
}

function update_prompt {
    PROMPT="$( host_prompt ) $( time_prompt )"
    RPROMPT="$( git_prompt )$( current_aws_prompt )$( current_path_prompt )"
}

function current_aws_prompt {
    echo "%{$fg[cyan]%}$PAREN[1]${AWS_PROFILE:--}$PAREN[2]%{${reset_color}%}"
}

function current_path_prompt {
    echo "%{$fg[cyan]%}$PAREN[1]%~$PAREN[2]%{${reset_color}%}"
}


function git_prompt {
    git_current_branch=$( git branch &> /dev/null | grep '^\*' | cut -b 3- )
    if [ ${git_current_branch} ]
    then
        GIT_BRANCH="$( git_prompt_color )$PROMPT_PAREN[1]branch:${git_current_branch}$PROMPT_PAREN[2]%{${reset_color}%}"
        echo "${GIT_BRANCH}$( git_status )"
    fi
}

function git_prompt_color {
    if [[ -n $(git status --short --ignore-submodules=dirty 2> /dev/null) ]]; then
      echo "%{$fg[red]%}"
    else
      echo "%{$fg[green]%}"
    fi
}

function git_status {
    git_index=$(git status --porcelain 2> /dev/null)
    git_status=''
    if $(echo "${git_index}" | grep --silent '^?? '); then
      git_status+="(untracked)"
    fi
    if $(echo "${git_index}" | grep --silent '^A  '); then
      git_status+="(added)"
    elif $(echo "${git_index}" | grep --silent '^M  '); then
      git_status+="(added)"
    fi
    if $(echo "${git_index}" | grep --silent '^ M '); then
      git_status+="(modified)"
    elif $(echo "${git_index}" | grep --silent '^AM '); then
      git_status+="(modified)"
    elif $(echo "${git_index}" | grep --silent '^ T '); then
      git_status+="(modified)"
    fi
    if $(echo "${git_index}" | grep --silent '^R  '); then
      git_status+="(renamed)"
    fi
    if $(echo "${git_index}" | grep --silent '^ D '); then
      git_status+="(deleted)"
    elif $(echo "${git_index}" | grep --silent '^AD '); then
      git_status+="(deleted)"
    fi
    if $(echo "${git_index}" | grep --silent '^UU '); then
      git_status+="(unmerged)"
    fi
    echo "%{$fg[yellow]%}${git_status}%{${reset_color}%}"
}


autoload -Uz add-zsh-hook
# プロンプト表示直前にプロンプト内容を書き換える
add-zsh-hook precmd update_prompt
#add-zsh-hook preexec update_prompt

