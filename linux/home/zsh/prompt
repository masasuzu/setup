# vim:ft=zsh:

PROMPT_PAREN="()"
PROMPT_SUFFIX2="\>"

if [[ -n "$LOGIN_SHELL" ]]; then
    PROMPT_PAREN="[]"
fi


autoload -U colors; colors;


function domain_prompt () {
    if [ ${LOGIN_SHELL} ]; then
        DOMAIN_DOLOR="yellow"
    else
        DOMAIN_DOLOR="red"
    fi

    echo "%{$fg_bold[$DOMAIN_DOLOR]%}${DOMAIN}%{${reset_color}%}"
}
function host_prompt () {
    echo "%{$fg[cyan]%}%n@%m%#%{${reset_color}%} "
}

function domain_prompt2 () {
    echo "%{$fg[yellow]%}${DOMAIN}%{${reset_color}%}"
}
function host_prompt2 () {
    echo "%{$fg[magenta]%}%n@%m%${PROMPT_SUFFIX2}%{${reset_color}%} "
}

function hms() {
    echo $(date +'%H:%M:%S')
}

function last_command_status () {
    echo "%(?.%{$fg[green]%}$( hms )%{${reset_color}%}.%{$fg[red]%}$( hms )%{${reset_color}%})"
}

function update_prompt () {
    PROMPT="$(  domain_prompt  ) $( last_command_status ) $( host_prompt  )"
    PROMPT2="$( domain_prompt2 ) $( last_command_status ) $( host_prompt2 )"

    RPROMPT="$( git_prompt )$( current_path_prompt )"
}

GIT_PROMPT_ADDED="(added)"
GIT_PROMPT_MODIFIED="(modified)"
GIT_PROMPT_DELETED="(deleted)"
GIT_PROMPT_RENAMED="(renamed)"
GIT_PROMPT_UNMERGED="(unmerged)"
GIT_PROMPT_UNTRACKED="(untracked)"

function current_path_prompt {
    echo "%{$fg[cyan]%}$PROMPT_PAREN[1]%~$PROMPT_PAREN[2]%{${reset_color}%}"
}
function git_prompt {
    GIT_CURRENT_BRANCH=$( git branch &> /dev/null | grep '^\*' | cut -b 3- )
    if [ ${GIT_CURRENT_BRANCH} ]
    then
        GIT_BRANCH="$( git_prompt_color )$PROMPT_PAREN[1]branch:${GIT_CURRENT_BRANCH}$PROMPT_PAREN[2]%{${reset_color}%}"
        echo "${GIT_BRANCH}$( git_status )"
    fi
}

function git_status {
    GIT_INDEX=$(git status --porcelain 2> /dev/null)
    GIT_STATUS=''
    if $(echo "$GIT_INDEX" | grep '^?? ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_UNTRACKED$GIT_STATUS"
    fi
    if $(echo "$GIT_INDEX" | grep '^A  ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_ADDED$GIT_STATUS"
    elif $(echo "$GIT_INDEX" | grep '^M  ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_ADDED$GIT_STATUS"
    fi
    if $(echo "$GIT_INDEX" | grep '^ M ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_MODIFIED$GIT_STATUS"
    elif $(echo "$GIT_INDEX" | grep '^AM ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_MODIFIED$GIT_STATUS"
    elif $(echo "$GIT_INDEX" | grep '^ T ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_MODIFIED$GIT_STATUS"
    fi
    if $(echo "$GIT_INDEX" | grep '^R  ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_RENAMED$GIT_STATUS"
    fi
    if $(echo "$GIT_INDEX" | grep '^ D ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_DELETED$GIT_STATUS"
    elif $(echo "$GIT_INDEX" | grep '^AD ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_DELETED$GIT_STATUS"
    fi
    if $(echo "$GIT_INDEX" | grep '^UU ' &> /dev/null); then
      GIT_STATUS="$GIT_PROMPT_UNMERGED$GIT_STATUS"
    fi
    echo "%{$fg[yellow]%}${GIT_STATUS}%{${reset_color}%}"
}

GIT_PROMPT_COLOR_DIRTY="%{$fg[red]%}"
GIT_PROMPT_COLOR_CLEAN="%{$fg[green]%}"
function git_prompt_color {
    if [[ -n $(git status -s --ignore-submodules=dirty 2> /dev/null) ]]; then
      echo "${GIT_PROMPT_COLOR_DIRTY}"
    else
      echo "${GIT_PROMPT_COLOR_CLEAN}"
    fi
}

if [[ -n "$WINDOW" ]]; then
    function preexec() {
        update_prompt
        local cmd=${1[(wr)^(*=*|sudo|vim|vi|lv|ssh|-*)]}
        echo -ne "\ek$cmd\e\\"
    }

    function precmd() {
        update_prompt
        local cwd=`print -nP %~`
        echo -n "\ek$cwd:t/\e\\"
    }
else
    function preexec() {
        update_prompt
    }

    function precmd() {
        update_prompt
    }
fi
