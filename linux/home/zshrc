# ~/.zshrc
#
# =======================================================================
# prompt
# -----------------------------------------------------------------------

setopt prompt_subst
setopt prompt_cr
setopt transient_rprompt
setopt prompt_percent

paren="()"
color="38;5;40"
suff="%%"

if [[ -n "$LOGIN_SHELL" ]]; then
    paren="[]"
    color="38;5;45"
fi

if [[ $UID = 0 ]]; then
    color="38;5;183"
    suff='#'
fi

PROMPT="%{[33m%}${DOMAIN}%{[0m%} %{[${color}m%}%n@%m%${suff}{[0m%} "
PROMPT2="%{[33m%}${DOMAIN}%{[0m%} %{[${color}m%}%n@%m>%{[0m%} "


function _update_rprompt () {
    GIT_CURRENT_BRANCH=$( git branch &> /dev/null | grep '^\*' | cut -b 3- )
    if [ ${GIT_CURRENT_BRANCH} ]
    then
        GIT_RPROMPT="%{[31m%}$paren[1]${GIT_CURRENT_BRANCH}$paren[2]%{[0m%}"
    else
        GIT_RPROMPT=""
    fi
    RPROMPT="%{[${color}m%}$paren[1]%~$paren[2]%{[0m%}${GIT_RPROMPT}"
}

if [[ -n "$WINDOW" ]]; then
    function preexec() {
        _update_rprompt
        local cmd=${1[(wr)^(*=*|sudo|vi|lv|ssh|-*)]}
        echo -ne "\ek$cmd\e\\"
    }

    function precmd() {
        _update_rprompt
        local cwd=`print -nP %~`
        echo -n "\ek$cwd:t/\e\\"
    }
else
    function preexec() {
        _update_rprompt
    }

    function precmd() {
        _update_rprompt
    }

fi

# =======================================================================
# history
# -----------------------------------------------------------------------

setopt append_history
setopt extended_history
setopt hist_expand
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_no_store
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt inc_append_history
setopt share_history

bindkey -e

HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=100000
LISTMAX=1000

if [[ $UID = 0 ]]; then
    unset HISTFILE
    SAVEHIST=0
fi

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end  history-search-end
bindkey "" history-beginning-search-backward-end
bindkey "" history-beginning-search-forward-end

function history-all { history -E 1 }

# =======================================================================
# completion
# -----------------------------------------------------------------------

setopt auto_list
setopt auto_param_keys
setopt auto_param_slash
setopt extended_glob
setopt list_types
setopt list_packed
setopt mark_dirs

autoload -U compinit
compinit -u

zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' use-cache true
zstyle ':completion:*:default:' menu select=1
zstyle ':completion:*:cd:*' tag-order local-direcories path-directories
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z} r:|[._-]=*'
zstyle ':completion:*' verbose yes

setopt complete_in_word
setopt glob_complete
setopt hist_expand
setopt no_beep

# =======================================================================
# cd, ls
# -----------------------------------------------------------------------

setopt auto_cd
setopt auto_pushd

# =======================================================================
# grep
# -----------------------------------------------------------------------

##### SEE ALSO http://www.clear-code.com/blog/2011/9/5.html
if type ggrep > /dev/null 2>&1; then
    alias grep=ggrep
fi
export GREP_OPTIONS
GREP_OPTIONS="--binary-files=without-match"
GREP_OPTIONS="--directories=recurse $GREP_OPTIONS"
GREP_OPTIONS="--exclude=\*.tmp $GREP_OPTIONS"
if grep --help | grep -q -- --exclude-dir; then
    GREP_OPTIONS="--exclude-dir=.svn $GREP_OPTIONS"
    GREP_OPTIONS="--exclude-dir=.git $GREP_OPTIONS"
    GREP_OPTIONS="--exclude-dir=.deps $GREP_OPTIONS"
    GREP_OPTIONS="--exclude-dir=.libs $GREP_OPTIONS"
fi

if grep --help | grep -q -- --color; then
    GREP_OPTIONS="--color=auto $GREP_OPTIONS"
fi

# =======================================================================
# process
# -----------------------------------------------------------------------

setopt auto_resume
setopt magic_equal_subst

# =======================================================================
# keyboard
# -----------------------------------------------------------------------

setopt ignore_eof
setopt NO_flow_control
setopt NO_hup

# =======================================================================
# alias
# -----------------------------------------------------------------------

setopt complete_aliases

alias ls='ls --color=auto'
alias ll="ls -l"
alias la="ls -laF"

alias cl="clear"
alias vi="vim"
alias datetime="perl -e 'print localtime . qq{\n}'"
alias pm="perldoc -m"
alias screen="tscreen"

alias apt-up="sudo aptitude update && sudo aptitude safe-upgrade"
alias apt-i="sudo aptitude install"

alias -g L="| lv"
alias -g T="| tail"
alias -g H="| head"
alias -g G="| grep"
alias -g W="| wc"

alias refenv="source ${HOME}/.zshrc"

function applog() {
    if [ -d ${HOME}/var/log/apache ]
    then
        multitail -f ${HOME}/var/log/apache/`date +%Y`/`date +%m`/error.`date +%Y_%m%d`.log ${HOME}/var/log/apache/`date +%Y`/`date +%m`/combined.`date +%Y_%m%d`.log
    else
        sudo multitail /var/log/apache2/error.log /var/log/apache2/access.log
    fi
}

function errorlog() {
    if [ -d ${HOME}/var/log/apache ]
    then
        tail -f ${HOME}/var/log/apache/`date +%Y`/`date +%m`/error.`date +%Y_%m%d`.log
    else
        sudo tail -f /var/log/apache2/error.log
    fi
}

function lv-errorlog() {
    if [ -d ${HOME}/var/log/apache ]
    then
        lv ${HOME}/var/log/apache/`date +%Y`/`date +%m`/error.`date +%Y_%m%d`.log
    else
        sudo lv -f /var/log/apache2/error.log
    fi
}

function combinedlog() {
    if [ -d ${HOME}/var/log/apache ]
    then
        tail -f ${HOME}/var/log/apache/`date +%Y`/`date +%m`/combined.`date +%Y_%m%d`.log
    else
        sudo tail -f /var/log/apache2/access.log
    fi
}

function cdl() {
    if [ -d ~/project/$1/site_perl/ ]
    then
        cd ~/project/$1/site_perl/$1
    else
        cd ~/project/$1/lib/$1
    fi
}

function cdp() {
    cd ~/project/$1/
}

PATH=${PATH}:${HOME}/bin:${HOME}/usr/local/bin:${HOME}/opt/bin
LANG=ja_JP.UTF-8; export LANG


## ÂÆüË°å„Åó„Åü„Éó„É≠„Çª„Çπ„ÅÆÊ∂àË≤ªÊôÇÈñì„Åå3Áßí‰ª•‰∏ä„Åã„Åã„Å£„Åü„Çâ
## Ëá™ÂãïÁöÑ„Å´Ê∂àË≤ªÊôÇÈñì„ÅÆÁµ±Ë®àÊÉÖÂ†±„ÇíË°®Á§∫„Åô„Çã„ÄÇ
REPORTTIME=3

source ${HOME}/.zsh/devrc

# ~/.zshrc

