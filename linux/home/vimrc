set nocompatible
filetype off

set rtp+=~/.vim/vundle.git/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'thinca/vim-quickrun'
Bundle 'scrooloose/nerdtree'
Bundle 'Shougo/vimshell'
Bundle 'Shougo/vimproc'
Bundle 'Source-Explorer-srcexpl.vim'
Bundle 'trinity.vim'
"Bundle 'taglist.vim'
Bundle 'petdance/vim-perl'

Bundle 'hotchpotch/perldoc-vim'
Bundle 'Shougo/neocomplcache'
"Bundle 'Shougo/neocomplcache-snippets-complete'
Bundle 'Shougo/neosnippet'

filetype plugin indent on

colorscheme darkblue
"colorscheme default
"
set t_RV=
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,iso-2022-jp,euc-jp,cp932
set fileformats=unix,dos,mac
set ambiwidth=double

" インデント
set smartindent
set autoindent
set cindent

" タブの設定
set tabstop=4 shiftwidth=4
set expandtab
set shiftround

" 表示の設定
set list
set listchars=tab:>-,extends:<,trail:-,eol:<

set number
set showmatch

" 検索の設定
set ignorecase
set smartcase

" ステータス行の表示
set laststatus=2
set statusline+=[ENCODE=%{&fileencoding}]
set statusline+=[FORMAT=%{&ff}]
set statusline+=[TYPE=%Y]
set statusline+=[LEN=%L]
set statusline+=[POS=%04l,%04v]
set statusline+=[%p%%]
set statusline+=[%F]

set cmdheight=2
set showcmd
set title

"ウィンドウタブ
imap ,t :tabnew

autocmd FileType yaml set sw=2 ts=2
autocmd FileType html set sw=2 ts=2
autocmd FileType ruby set sw=2 ts=2
autocmd BufNewFile,BufRead *.psgi set filetype=perl
autocmd BufNewFile,BufRead *.ru set filetype=ruby
autocmd BufNewFile,BufRead *.tt set filetype=html
autocmd BufNewFile,BufRead *.tx set filetype=html

syntax enable
let perl_no_extended_vars=1

"----------------------------------------------------
"" quickrun
"----------------------------------------------------
set splitright "新しいウィンドウを右に開く
let g:quickrun_config = {}
let g:quickrun_config._ = {'runner' : 'vimproc'}

"----------------------------------------------------
" perl
"----------------------------------------------------
inoremap <C-d> $
inoremap <C-a> @

"----------------------------------------------------
" perldoc-vim
"----------------------------------------------------
noremap K :Perldoc<CR>
setlocal iskeyword-=/

"----------------------------------------------------
" neocomplcache
"----------------------------------------------------

"" Disable AutoComplPop.
"let g:acp_enableAtStartup = 0
"" Use neocomplcache.
"let g:neocomplcache_enable_at_startup = 1
"" Use underbar completion.
"let g:neocomplcache_enable_underbar_completion = 1
"" Set minimum syntax keyword length.
"let g:neocomplcache_min_syntax_length = 3
"let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'
"
" " Use smartcase.
"let g:neocomplcache_enable_smart_case = 1
"" Use camel case completion.
"let g:neocomplcache_enable_camel_case_completion = 1
"" Select with <TAB>
"inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
"
"let g:neocomplcache_ctags_arguments_list = {
"  \ 'perl' : '-R -h ".pm"'
"  \ }
"
"let g:neocomplcache_snippets_dir = "~/.vim/snippets"
"" Define dictionary.
"let g:neocomplcache_dictionary_filetype_lists = {
"    \ 'default'    : '',
"    \ 'perl'       : $HOME . '/.vim/dict/perl.dict'
"    \ }
"
"" Define keyword.
"if !exists('g:neocomplcache_keyword_patterns')
"  let g:neocomplcache_keyword_patterns = {}
"endif
"let g:neocomplcache_keyword_patterns['default'] = '\h\w*'
"

" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

"let g:neosnippet#snippets_directory='~/.vim/snippets/perl.snip'

